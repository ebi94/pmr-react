{"ast":null,"code":"var _jsxFileName = \"/var/www/html/pmr-react/src/components/Headers/BackgroundPageHeader.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // reactstrap components\n\nimport { Container } from \"reactstrap\"; // core components\n\nconst BackgroundPageHeader = props => {\n  let pageHeader = React.createRef();\n  const {\n    titlePage,\n    backgroundImage\n  } = props;\n  React.useEffect(() => {\n    if (window.innerWidth > 991) {\n      const updateScroll = () => {\n        let windowScrollTop = window.pageYOffset / 3;\n        pageHeader.current.style.transform = \"translate3d(0,\" + windowScrollTop + \"px,0)\";\n      };\n\n      window.addEventListener(\"scroll\", updateScroll);\n      return function cleanup() {\n        window.removeEventListener(\"scroll\", updateScroll);\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header page-header-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header-image\",\n    style: {\n      backgroundImage: backgroundImage\n    },\n    ref: pageHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, titlePage)))));\n};\n\nBackgroundPageHeader.propTypes = {\n  titlePage: PropTypes.string.isRequired,\n  backgroundImage: PropTypes.string.isRequired\n};\nexport default BackgroundPageHeader;","map":{"version":3,"sources":["/var/www/html/pmr-react/src/components/Headers/BackgroundPageHeader.js"],"names":["React","PropTypes","Container","BackgroundPageHeader","props","pageHeader","createRef","titlePage","backgroundImage","useEffect","window","innerWidth","updateScroll","windowScrollTop","pageYOffset","current","style","transform","addEventListener","cleanup","removeEventListener","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,MAAIC,UAAU,GAAGL,KAAK,CAACM,SAAN,EAAjB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCJ,KAAvC;AAGAJ,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAIC,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AAC3B,YAAMC,YAAY,GAAG,MAAM;AACzB,YAAIC,eAAe,GAAGH,MAAM,CAACI,WAAP,GAAqB,CAA3C;AACAT,QAAAA,UAAU,CAACU,OAAX,CAAmBC,KAAnB,CAAyBC,SAAzB,GACE,mBAAmBJ,eAAnB,GAAqC,OADvC;AAED,OAJD;;AAKAH,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AACA,aAAO,SAASO,OAAT,GAAmB;AACxBT,QAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCR,YAArC;AACD,OAFD;AAGD;AACF,GAZD;AAaA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAE;AACLJ,MAAAA,eAAe,EAAEA;AADZ,KAFT;AAKE,IAAA,GAAG,EAAEH,UALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBE,SAAvB,CADF,CADF,CARF,CADF,CADF;AAkBD,CApCD;;AAsCAJ,oBAAoB,CAACkB,SAArB,GAAiC;AAC7Bd,EAAAA,SAAS,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADC;AAE7Bf,EAAAA,eAAe,EAAEP,SAAS,CAACqB,MAAV,CAAiBC;AAFL,CAAjC;AAKA,eAAepB,oBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\n// core components\n\nconst BackgroundPageHeader = props => {\n  let pageHeader = React.createRef();\n  const { titlePage, backgroundImage } = props;\n\n\n  React.useEffect(() => {\n    if (window.innerWidth > 991) {\n      const updateScroll = () => {\n        let windowScrollTop = window.pageYOffset / 3;\n        pageHeader.current.style.transform =\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\n      };\n      window.addEventListener(\"scroll\", updateScroll);\n      return function cleanup() {\n        window.removeEventListener(\"scroll\", updateScroll);\n      };\n    }\n  });\n  return (\n    <>\n      <div className=\"page-header page-header-small\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage: backgroundImage\n          }}\n          ref={pageHeader}\n        ></div>\n        <div className=\"content-center\">\n          <Container>\n            <h1 className=\"title\">{titlePage}</h1>\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n}\n\nBackgroundPageHeader.propTypes = {\n    titlePage: PropTypes.string.isRequired,\n    backgroundImage: PropTypes.string.isRequired\n};\n\nexport default BackgroundPageHeader;\n"]},"metadata":{},"sourceType":"module"}