{"ast":null,"code":"var _jsxFileName = \"/var/www/html/pmr-react-new/src/components/ProductItem/IndexProductItem.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // reactstrap components\n\nimport { Button } from \"reactstrap\"; // core components\n\nconst IndexProductItem = props => {\n  const {\n    text,\n    image\n  } = props;\n  const [showQuote, setShowQuote] = React.useState(false);\n\n  const handleMouseHover = () => {\n    if (showQuote === true) {\n      setShowQuote(false);\n    } else {\n      setShowQuote(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-product-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: text,\n    className: \"rounded img-raised img-product\",\n    src: image // src={require({image})}\n    ,\n    onMouseEnter: () => handleMouseHover(),\n    onMouseLeave: () => handleMouseHover(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, text), showQuote && /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-round btn-get-quote-item\",\n    color: \"info\",\n    outline: true,\n    type: \"button\",\n    onMouseEnter: () => setShowQuote(true),\n    onMouseLeave: () => setShowQuote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Get Quote\")));\n};\n\nIndexProductItem.defaultProps = {\n  text: '-',\n  image: '-'\n};\nIndexProductItem.propTypes = {\n  text: PropTypes.string,\n  image: PropTypes.string\n};\nexport default IndexProductItem;","map":{"version":3,"sources":["/var/www/html/pmr-react-new/src/components/ProductItem/IndexProductItem.js"],"names":["React","PropTypes","Button","IndexProductItem","props","text","image","showQuote","setShowQuote","useState","handleMouseHover","defaultProps","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SACEC,MADF,QAEO,YAFP,C,CAIA;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBF,KAAvB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAGH,SAAS,KAAK,IAAjB,EAAsB;AAClBC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD,MAEK;AACDA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GAND;;AAQF,sBACE,uDACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAEH,IADT;AAEI,IAAA,SAAS,EAAC,gCAFd;AAGI,IAAA,GAAG,EAAEC,KAHT,CAII;AAJJ;AAKI,IAAA,YAAY,EAAE,MAAMI,gBAAgB,EALxC;AAMI,IAAA,YAAY,EAAE,MAAMA,gBAAgB,EANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAL,CATJ,EAUKE,SAAS,iBACN,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,8BADd;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,OAAO,MAHX;AAGY,IAAA,IAAI,EAAC,QAHjB;AAII,IAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,IAAD,CAJpC;AAKI,IAAA,YAAY,EAAE,MAAMA,YAAY,CAAC,IAAD,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXR,CADJ,CADF;AAyBD,CArCD;;AAuCAL,gBAAgB,CAACQ,YAAjB,GAAgC;AAC5BN,EAAAA,IAAI,EAAE,GADsB;AAE5BC,EAAAA,KAAK,EAAE;AAFqB,CAAhC;AAKAH,gBAAgB,CAACS,SAAjB,GAA6B;AAC5BP,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MADY;AAE5BP,EAAAA,KAAK,EAAEL,SAAS,CAACY;AAFW,CAA7B;AAKA,eAAeV,gBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button\n} from \"reactstrap\";\n\n// core components\n\nconst IndexProductItem = props => {\n    const { text, image} = props;\n    const [showQuote, setShowQuote] = React.useState(false);\n\n    const handleMouseHover = () => {\n        if(showQuote === true){\n            setShowQuote(false)\n        }else{\n            setShowQuote(true)\n        }\n    }\n\n  return (\n    <>\n        <div className=\"box-product-item\">\n            <img\n                alt={text}\n                className=\"rounded img-raised img-product\"\n                src={image}\n                // src={require({image})}\n                onMouseEnter={() => handleMouseHover()}\n                onMouseLeave={() => handleMouseHover()}\n                ></img>\n            <h4>{text}</h4>\n            {showQuote && (\n                <Button \n                    className=\"btn-round btn-get-quote-item\" \n                    color=\"info\" \n                    outline type=\"button\" \n                    onMouseEnter={() => setShowQuote(true)}\n                    onMouseLeave={() => setShowQuote(true)}>\n                        Get Quote\n                </Button>\n            )}\n        </div>\n    </>\n  );\n}\n\nIndexProductItem.defaultProps = {\n    text: '-',\n    image: '-'\n};\n\nIndexProductItem.propTypes = {\n\ttext: PropTypes.string,\n\timage: PropTypes.string\n};\n\nexport default IndexProductItem;\n"]},"metadata":{},"sourceType":"module"}