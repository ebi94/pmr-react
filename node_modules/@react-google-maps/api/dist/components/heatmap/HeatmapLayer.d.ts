/// <reference types="googlemaps" />
import * as React from 'react';
export interface HeatmapLayerProps {
    /** The data points to display. Required. */
    data: google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation> | google.maps.LatLng[] | google.maps.visualization.WeightedLocation[];
    options?: google.maps.visualization.HeatmapLayerOptions;
    /** This callback is called when the heatmapLayer instance has loaded. It is called with the heatmapLayer instance. */
    onLoad?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void;
    /** This callback is called when the component unmounts. It is called with the heatmapLayer instance. */
    onUnmount?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void;
}
declare function HeatmapLayer(props: HeatmapLayerProps): JSX.Element;
declare const _default: React.MemoExoticComponent<typeof HeatmapLayer>;
export default _default;
