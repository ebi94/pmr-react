/// <reference types="googlemaps" />
import * as React from 'react';
export interface KmlLayerProps {
    options?: google.maps.KmlLayerOptions;
    /** The URL of the KML document to display. */
    url?: string;
    /** The z-index of the layer. */
    zIndex?: number;
    /** This event is fired when a feature in the layer is clicked. */
    onClick?: (e: google.maps.MouseEvent) => void;
    /** This event is fired when the KML layers default viewport has changed. */
    onDefaultViewportChanged?: () => void;
    /** This event is fired when the KML layer has finished loading. At this point it is safe to read the status property to determine if the layer loaded successfully. */
    onStatusChanged?: () => void;
    /** This callback is called when the kmlLayer instance has loaded. It is called with the kmlLayer instance. */
    onLoad: (kmlLayer: google.maps.KmlLayer) => void;
    /** This callback is called when the component unmounts. It is called with the kmlLayer instance. */
    onUnmount: (kmlLayer: google.maps.KmlLayer) => void;
}
declare function KmlLayer(props: KmlLayerProps): JSX.Element;
declare const _default: React.MemoExoticComponent<typeof KmlLayer>;
export default _default;
